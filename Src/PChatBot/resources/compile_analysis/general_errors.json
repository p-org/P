{
    "duplicates declaration": "There are duplicate declarations in this file. Remove all duplicates except for one or change their names. Remember that enum values in P are considered as global constants and must have unique names. Also, states inside of machines must have unique names. Foo this. ",
    "could not find foreach iterator variable": " In P, when creating a foreach loop, the code needs to declare the iterator variable first at the very beginning of the function body or machine body they are in. <example> var iterator_var: type_name; </example> Do not initialize the iterator variable. The iterator variable is the word right before the 'in' keyword in the foreach loop. Keep the same type definitions or declarations. Keep the foreach loop the same. ",
    "could not find variable, enum element, or event": "In this line, you are attempting to use a variable, enum element, or event that hasn't been defined yet. Do not change this line!! <file_line> {file_line} </line> Add a single line to the P file: add a new declaration of a variable, enum, or event called {variable_name}. If it is an event, it must be at the very beginnning of the P file. If it is a variable, define the variable at the very beginning of a machine body or at the very beginning of a function body. Make sure that the variable you are trying to use is not a machine type. If it is a machine type, change the variable's name. Here are all the machines in the P program: {machine_names}. Do not add any other types, enums, events, variables, or machines to the file. Keep the rest of the file the same. ",
    "could not find enum, typedef, event set, machine, or interface": "This line is incorrect: {file_line} <error_message>{error_message}</error_message>. The last word in the error message is the missing definition. If it is missing a type declaration, add one single type declaration at the very beginning of the P file and DO NOT add any new events or enums. If you are defining a new machine, DO NOT add any events, types, or enums. Only add a machine that has a start state. {error_message} Here are all the machines in the P program: {machine_names}",
    "could not find event": "You are attempting to use an event that does not exist. Please declare an event called {event_name} in the file of all the declarations. Here are all of the type, event, and enum declarations for this P program. <file> {declarations} </file> Here are all the machines in the P program: {machine_names}",
    "functions at entry or exit and do or goto transitions cannot take more than 1 parameter": "Functions at entry or exit and do or goto transitions cannot take more than 1 parameter, but you have provided more than one parameter. Please fix this so that the function takes in one parameter. Make sure that the single parameter isn't using a P keyword. ",
    "expected: namedtuple": " You are incorrectly trying to access variables that are part of another machine with dot notation. Note down all machines being used in the current function. Do not try to access any machine fields. If this is a P machine's code, you can use send statements. If this is a P spec's code, remove all variables of machines. After removing the variables, remove all places where those variables were used. Here is a list of the machines in this project: {machine_names}",
    "could not find function": "The function you are using does not exist. Create a new function or delete this line. {error_message}",
    "Module not closed. test module is not closed with respect to created interfaces;": "This is the test case: <test_case> {test_case} </test_case>. The last line of the test case contains all of the test modules. You need to add the missing machine {interface} to the test module in order for the test case to work. Do not add the test case in the returned code or change the test case at all. ",
    "extraneous input '['": "There is an extra [ on this line for no reason. Fix this. ",
    "got type:": "There was a type mismatch on this line, where it expected one type and received another type. ", 
    "could not find module" : "Your task is to add one single line to the file and keep all other lines unchanged. Write a line generating a module called {module} with the correct machine. Check the machines_list for machines that are the same name as the missing module: <machines_list> {machine_names} </machines_list>. If a machine in the machines list is the same name as the missing module's name, it is required to use that name to fill the module curly brackets. For example, <example> module Participant = {{Participant}}; </example> Keep all other modules the same. ",
    "duplicates handler": "In a single state, you cannot have multiple event handlers handling the same event. Defer statements and ignore statements count as event handlers too. ", 
    "goto, function or constructor call expected": "{instruction}: <file_line> {file_line} </file_line>. Your goto, function, or constructor call is expecting {prev_parameters} arguments, but it was given {now_parameters} arguments. Provide a variable as the new argument. For goto statements, in order to add arguments, you need to use the following syntax: <example> goto WaitForRequests, new_argument;   </example>.", 
    "field": "This line's variable has the missing field: {file_line} in this file: <file> {prev_file_contents} </file>. Do not add any machines to the returned code. {error_message} . Your type is missing a field. Please add it to the type. Do not remove any other type or event or enum definitions. Only return types, enums, and events. Do not add any =thing to the file. Only add the missing field to the type name. ", 
    "+=": "In P, += is only used to insert elements into a collection, such as a sequence, map, or set. If you would like to add numbers, you need to use x = x+1 syntax. If you are trying to insert elements into a collection, the element you are adding must have parentheses surrounding it. Add parentheses around it. Here is an example of inserting into a collection: <example> set_var += (element); </example>",
    "expecting {';', ','}": "Something is very wrong with the syntax of this line. Use the P Syntax document to correct the error with this line. {error_message}",
    "mismatched input 'set' expecting Iden": "Delete this line.", 
    "10000": "The maximum number of choices allowed in a choose expression is 10000.", 
    "does not exist in the test module": "Here is the test case: {test_case} Use this error message to correct the file. The test module is the identifier in the last line. The main module is the word next to 'main=.' The main module of the test case isn't inside the test module. You need to add the main module of the test case to the test module. The main module needs to include the machine; the curly brackets cannot be empty. Do not return the test case, but return the modules! {error_message}", 
    "expecting Iden": "You are using a P keyword in this line when it was expecting a normal variable name. Please replace the P keyword with another word. ", 
    "could not find interface": "Create a new machine where the name is the missing interface's name. ", 
    "is used as a transition function, but might change state here.": "This method should not change state. Do not change state. ", 
    "$, $$, this, new, send, announce, receive, and pop are not allowed in monitors": "Specification monitors cannot have $, $$, this, new, send, announce, receive, case, and pop statements. You can put assert statements. Also, do not put event handlers in functions.", 
    "could not find state": "When using goto in an event handler, remember that the goto must be to another state not another function. ", 
    "incomparable": "Remove the 'to' keyword. You are attempting to coerce types with the keyword 'to' incorrectly. P only supports coercing of any value of type float to int and also any enum element to int with the keyword 'to.' We currently support only coercing of type float to int and also any enum element to int. All other types are impossible to convert to each other. You need to fix this.", 
    "expected either both float or both int;": "When using >, <, ==, or != operators, both sides must be either both floats or both ints. ",
    "no viable alternative at input": "This line is incorrect. The syntax is incorrect. Use the P syntax document to fix the line. ",
    "could not find variable": "{error_message} You need to declare a variable like this at the beginning of the function body or the beginning of the machine body: <example> var example_var: some_type; </example>"
}