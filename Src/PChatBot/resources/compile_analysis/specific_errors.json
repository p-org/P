{
    "extraneous input 'var' expecting {'announce', 'assert', 'break', 'continue', 'foreach', 'goto', 'if', 'new', 'print', 'raise', 'receive', 'return', 'send', 'while', '{', '}', ';', Iden}": "Locate all variable declarations in this file that are not at the very beginning of their function's bodies. This file has variables incorrectly declared under other lines of code. The variables may be nested within a while loop or inside of an if statement or under an if statement or under other statements. All variables must be declared at the very beginning of the function body they are in, above all other lines of code. Move all variables that aren't declared at the beginning of the function to the beginning of the function. Do not move variables into states. They must be declared at the beginning of the functions. Here is the line where the var is in the wrong place. <line> {file_line} </line>",
    "extraneous input 'on' expecting {'cold', 'fun', 'hot', 'start', 'state', 'var', '}'}": "This code has an event handler in an incorrect place. All event handlers must be inside of states. ",
    "extraneous input 'on' expecting {'announce', 'assert', 'break', 'continue', 'foreach', 'goto', 'if', 'new', 'print', 'raise', 'receive', 'return', 'send', 'var', 'while', '{', '}', ';', Iden}": "This code has an event handler in an incorrect place. All event handlers must be inside of states. ",
    "mismatched input ',' expecting 'in'": "When iterating through a foreach loop, you only need one variable to do so. If you are iterating through a map, you would use keys(expr) or values(expr) in order to do so.",
    "mismatched input '{' expecting 'observes'": "In P, the syntax for a spec is like this: spec iden observes eventsList statemachineBody.,",
    "extraneous input 'goto' expecting {'defer', 'entry', 'exit', 'ignore', 'on', '}'}": "Goto statements can only be placed inside of other functions or entry functions or event handlers. Move or remove any goto statements that are outside of these. ",
    "extraneous input 'event' expecting {'cold', 'fun', 'hot', 'start', 'state', 'var', '}'}": "The following line is in the wrong place: <line> {file_line}</line>. The event is in the wrong place. It should be declared above the machine. Events are always declared at the very beginning of a P file. Do not add types or enums or machines. Do one task: move the event to the beginning of the P file.  ",
    "String expr format placeholders must contain only digits. Escape braces by doubling them.": "If the format function takes in multiple arguments, you need to place the digits starting from 0 inside of the curly brackets. There must be one digit inside a pair of curly brackets per argument after the main string. String expression format placeholders must contain digits or be doubled up. If you would like to include curly braces without using them as format placeholders, you can escape braces by doubling them. If you would like to use curly braces as format placeholders, place digits starting from 0 inside of the curly braces representing what number placeholder it is.",
    "no viable alternative at input '({'": "Creating a map, sequence, or set in P with ({variable}) is completely incorrect. In order to create a map, sequence, or set in P, you need to declare a variable at the top of the function or machine. Never make the map, sequence, or set equal to anything. If you want the map, sequence, or set to contain items, you need to add to it with collection_var += (item_var);. Then, you can set collection_var equal to that variable. ",
    "extraneous input 'var' expecting {<EOF>, 'enum', 'event', 'eventset', 'machine', 'interface', 'fun', 'spec', 'type', 'module', 'implementation', 'test'}": "This code has variables declared at the wrong place. Variables cannot be declared at the top of the program. They must be declared at the very top of a machine or the top of a function. Move the variable. Move the variables that aren't declared at the top of the function or the top of a machine.",
    "mismatched input 'var' expecting {<EOF>, 'enum', 'event', 'eventset', 'machine', 'interface', 'fun', 'spec', 'type', 'module', 'implementation', 'test'}": "This code has variables declared at the wrong place. Variables cannot be declared at the top of the program. They must be declared at the very top of a machine or the top of a function. Move the variables that aren't declared at the top of the function.",
    "mismatched input 'var' expecting {'defer', 'entry', 'exit', 'ignore', 'on', '}'}": "This code has variables declared at the wrong place. They must be declared at the very top of a machine or the top of a function. Move the variables that aren't declared at the top of the function or to the top of the machine. Variables declared inside of states is illegal. ",
    "extraneous input 'defer' expecting {'announce', 'assert', 'break', 'continue', 'foreach', 'goto', 'if', 'new', 'print', 'raise', 'receive', 'return', 'send', 'while', '{', '}', ';', Iden}": "Defer statements can only be placed within a state body because defer statements are a type of event handler. They cannot be placed inside of functions.",
    "mismatched input 'type' expecting {'cold', 'fun', 'hot', 'start', 'state', 'var', '}'}": "This type declaration {file_line} was declared in an incorrect place. All type and enum declarations are declared at the very top of a P program. Only move the type declaration to the right place. Do not add new type, enum, or event declarations. ",
    "extraneous input 'enum' expecting {'cold', 'fun', 'hot', 'start', 'state', 'var', '}'}": "This enum declaration {file_line} was declared in an incorrect place. All type and enum declarations are declared at the very top of a P program. Only move the type declaration to the right place. Do not add new type, enum, or event declarations. ",
    "extraneous input 'type' expecting {'cold', 'fun', 'hot', 'start', 'state', 'var', '}'}": "This type declaration {file_line} was declared in an incorrect place. All type and enum declarations are declared at the very top of a P program. Only move the type declaration to the right place. Do not add new type, enum, or event declarations. ",
    "extraneous input 'var' expecting {'defer', 'entry', 'exit', 'ignore', 'on', '}'}": "This code has variables declared at the wrong place. They must be declared at the very top of a machine or the top of a function. Move the variables that aren't declared at the top of the function. ",
    "expected an interface or int or float type": "You are attempting to coerce types with the keyword 'to' incorrectly. P only supports coercing of any value of type float to int and also any enum element to int with the keyword 'to.' We currently support only coercing of type float to int and also any enum element to int. All other types are impossible to convert to each other. You need to fix this. If you would like to convert an int or float to a string, try using the format function. Here is the line that is erroring: {file_line}",
    "extraneous input '{' expecting {'float', 'default', 'format', 'halt', 'keys', 'new', 'sizeof', 'this', 'values', 'choose', BoolLiteral, IntLiteral, 'null', StringLiteral, '$$', '$', '!', '-', '(', ')', '.', Iden}": "It is incorrect to call a function on a value with curly brackets. If you would like to call a function on a collection type, you need to declare a variable of that collection type. Then, you need to add the values to that variables. Then, call the function on that variable. Also, you can't initialize a collection with curly brackets. This is how you declare a collection and add values. <example>var st : set[T];\n var x: T;\n // adds x into the set st\n st += (x);\n</example>",
    "extraneous input 'ignore' expecting {'announce', 'assert', 'break', 'continue', 'foreach', 'goto', 'if', 'new', 'print', 'raise', 'receive', 'return', 'send', 'while', '{', '}', ';', Iden}": "Ignore statements can only be placed within a state body because defer statements are a type of event handler. They cannot be placed inside of functions.",
    "missing ')' at 'is'": "In P, comparisons are done with == or !=. Using 'is' is incorrect.",
    "extraneous input 'case' expecting {'announce', 'assert', 'break', 'continue', 'foreach', 'goto', 'if', 'new', 'print', 'raise', 'receive', 'return', 'send', 'var', 'while', '{', '}', ';', Iden}": "Case statements must be inside of receive statements. ",
    "mismatched input '=' expecting ';'": "This line is wrong: {file_line}. Variables cannot be declared and initialized on the same line. You need to separate declaration and initialization of variables. Variables must be declared at the very beginning of a P machine or the very beginning of a P function. Then, variables must be initalized with values inside of a function or inside of P states. ",
    "mismatched input ',' expecting ')'": "This line is expecting a single parameter. Please change it. {file_line}",
    "extraneous input '{' expecting {'float', 'default', 'format', 'halt', 'keys', 'new', 'sizeof', 'this', 'values', 'choose', BoolLiteral, IntLiteral, 'null', StringLiteral, '$$', '$', '!', '-', '(', '.', Iden}": "It is incorrect to call a function on a value with curly brackets. If you would like to call a function on a collection type, you need to declare a variable of that collection type. Then, you need to add the values to that variables. Then, call the function on that variable. Also, you can't initialize a collection with curly brackets. This is how you declare a collection and add values. <example>var st : set[T];\n var x: T;\n // adds x into the set st\n st += (x);\n</example>", 
    "mismatched input '(' expecting ';'": "Fix the following line that is using dot notation to call functions: {file_line}. You are not allowed to access other machines' functions or use other machines' fields. You are also not allowed to call functions without setting the result equal to a variable. Avoid using dot notation to call functions on variables. Instead, pass the variable as a parameter inside the function's parentheses. You cannot place identifiers with dot notation in front when calling functions. <example>x = Foo(); y = Bar(10, \"haha\");</example Please fix this. ", 
    "no viable alternative at input '.keys'": "Instead of using expr.keys(), use keys(expr). ",
    "no viable alternative at input '.values'": "Instead of using expr.values(), use values(expr). "
}