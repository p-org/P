[
  {
    "type": "CreateStateMachine",
    "details": {
      "log": "Main(1) was created by task \u00272\u0027.",
      "id": "Main(1)",
      "payload": "null",
      "clock": {
        "Main(1)": 1
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Main(1) enters state \u0027S\u0027.",
      "id": "Main(1)",
      "state": "S",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Main(1)": 2
      }
    }
  },
  {
    "type": "RaiseEvent",
    "details": {
      "log": "\u0027Main(1)\u0027 raised event \u0027x with payload (\u003Ca,3,\u003E)\u0027 in state \u0027S\u0027.",
      "id": "Main(1)",
      "event": "x",
      "state": "S",
      "payload": {
        "0": {},
        "1": {}
      },
      "clock": {
        "Main(1)": 3
      }
    }
  },
  {
    "type": "RaiseEvent",
    "details": {
      "log": "\u0027Main(1)\u0027 raised event \u0027a with payload (3)\u0027 in state \u0027S\u0027.",
      "id": "Main(1)",
      "event": "a",
      "state": "S",
      "payload": 3,
      "clock": {
        "Main(1)": 4
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Main(1) exits state \u0027S\u0027.",
      "id": "Main(1)",
      "state": "S",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Main(1)": 5
      }
    }
  },
  {
    "type": "PopStateUnhandledEvent",
    "details": {
      "log": "Main(1) popped state S due to unhandled event \u0027a\u0027.",
      "id": "Main(1)",
      "event": "a",
      "state": "S",
      "payload": "null",
      "clock": {
        "Main(1)": 6
      }
    }
  },
  {
    "type": "ExceptionThrown",
    "details": {
      "log": "Main(1) running action \u0027\u0027 in state \u0027S\u0027 threw exception \u0027UnhandledEventException\u0027.",
      "id": "Main(1)",
      "state": "S",
      "payload": "null",
      "action": "",
      "exception": "UnhandledEventException",
      "clock": {
        "Main(1)": 7
      }
    }
  },
  {
    "type": "AssertionFailure",
    "details": {
      "log": "Main(1) received event \u0027PImplementation.a\u0027 that cannot be handled.",
      "error": "Main(1) received event \u0027PImplementation.a\u0027 that cannot be handled.",
      "payload": "null"
    }
  }
]