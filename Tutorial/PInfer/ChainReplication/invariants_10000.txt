∀e0: eReadSuccess ∀e1: eWriteResponse :: (e0.payload.k == e1.payload.k) ∧ (e0.payload.sequence_id < e1.payload.sequence_id) -> (indexof(e0) < indexof(e1))
∀e0: eReadSuccess ∀e1: eWriteResponse :: (indexof(e0) < indexof(e1)) ∧ (e0.payload.k == e1.payload.k) -> (e0.payload.sequence_id <= e1.payload.sequence_id)
∀e0: eReadSuccess ∀e1: eWriteResponse :: (e0.payload.k == e1.payload.k) ∧ (e0.payload.sequence_id > e1.payload.sequence_id) -> (indexof(e0) > indexof(e1))
∀e0: eReadSuccess ∀e1: eWriteResponse :: (indexof(e0) > indexof(e1)) ∧ (e0.payload.k == e1.payload.k) -> (e0.payload.sequence_id >= e1.payload.sequence_id)
∀e0: eReadSuccess :: ∃e1: eWriteResponse :: (indexof(e0) > indexof(e1)) ∧ (e0.payload.sequence_id == e1.payload.sequence_id) ∧ (e0.payload.k == e1.payload.k) ∧ (e0.payload.v == e1.payload.v)
∀e0: eNotifyLog ∀e1: eNotifyLog :: (e0.payload.position <= e1.payload.position) ∧ (indexof(e0) > indexof(e1)) -> (size(e0.payload.log) >= size(e1.payload.sent)) ∧ (e0.payload.epoch >= e1.payload.epoch) ∧ (size(e0.payload.log) >= size(e1.payload.log)) ∧ (((size(e0.payload.log)) - (1)) >= ((size(e1.payload.sent)) - (1))) ∧ (((size(e0.payload.log)) - (1)) >= ((size(e1.payload.log)) - (1))) ∧ (((size(e0.payload.sent)) - (1)) >= ((size(e1.payload.sent)) - (1))) ∧ (size(e0.payload.sent) >= size(e1.payload.sent))
∀e0: eNotifyLog ∀e1: eNotifyLog :: (e0.payload.position <= e1.payload.position) ∧ (size(e0.payload.log) > size(e1.payload.sent)) -> (((size(e0.payload.log)) - (1)) >= size(e1.payload.sent)) ∧ (((size(e0.payload.sent)) - (1)) >= ((size(e1.payload.sent)) - (1))) ∧ (size(e0.payload.sent) >= size(e1.payload.sent))
∀e0: eNotifyLog ∀e1: eNotifyLog :: (e0.payload.position <= e1.payload.position) ∧ (size(e0.payload.sent) > size(e1.payload.sent)) -> (((size(e0.payload.log)) - (1)) >= size(e1.payload.sent)) ∧ (((size(e0.payload.sent)) - (1)) >= size(e1.payload.sent)) ∧ (size(e0.payload.log) > size(e1.payload.sent))
∀e0: eNotifyLog ∀e1: eNotifyLog :: (e0.payload.position <= e1.payload.position) ∧ (size(e0.payload.sent) == size(e1.payload.log)) -> (size(e0.payload.log) >= size(e1.payload.sent)) ∧ (e0.payload.epoch >= e1.payload.epoch) ∧ (size(e0.payload.log) >= size(e1.payload.log)) ∧ (((size(e0.payload.log)) - (1)) >= ((size(e1.payload.sent)) - (1))) ∧ (((size(e0.payload.log)) - (1)) >= ((size(e1.payload.log)) - (1))) ∧ (((size(e0.payload.sent)) - (1)) >= ((size(e1.payload.sent)) - (1))) ∧ (size(e0.payload.sent) >= size(e1.payload.sent))
∀e0: eNotifyLog ∀e1: eNotifyLog :: (e0.payload.position <= e1.payload.position) ∧ (size(e0.payload.sent) == size(e1.payload.sent)) -> (size(e0.payload.log) >= size(e1.payload.sent)) ∧ (((size(e0.payload.log)) - (1)) >= ((size(e1.payload.sent)) - (1))) ∧ (((size(e0.payload.sent)) - (1)) <= ((size(e1.payload.log)) - (1))) ∧ (size(e0.payload.sent) <= size(e1.payload.log))
∀e0: eNotifyLog ∀e1: eNotifyLog :: (e0.payload.position <= e1.payload.position) ∧ (prefixOf(e0.payload, e1.payload) == Yes) -> (size(e0.payload.log) <= size(e1.payload.log)) ∧ (((size(e0.payload.sent)) - (1)) <= ((size(e1.payload.log)) - (1))) ∧ (size(e0.payload.sent) <= size(e1.payload.log)) ∧ (((size(e0.payload.log)) - (1)) <= ((size(e1.payload.log)) - (1))) ∧ (e0.payload.epoch <= e1.payload.epoch)
∀e0: eNotifyLog ∀e1: eNotifyLog :: (e0.payload.position <= e1.payload.position) ∧ (UnionEq(e0.payload, e1.payload) == Yes) -> (((size(e0.payload.log)) - (1)) <= size(e1.payload.log)) ∧ (((size(e0.payload.sent)) - (1)) <= size(e1.payload.log))
∀e0: eWriteResponse :: ∃e1: eWriteRequest :: (indexof(e0) > indexof(e1)) ∧ (e0.payload.k == e1.payload.k) ∧ (e0.payload.v == e1.payload.v)
∀e0: eWriteResponse ∀e1: eWriteResponse :: (indexof(e0) < indexof(e1)) ∧ (e0.payload.k == e1.payload.k) -> (e0.payload.sequence_id <= e1.payload.sequence_id)
∀e0: eWriteResponse ∀e1: eWriteResponse :: (e0.payload.k == e1.payload.k) ∧ (e0.payload.sequence_id > e1.payload.sequence_id) -> (indexof(e0) > indexof(e1))
∀e0: eReadSuccess ∀e1: eReadSuccess :: (indexof(e0) < indexof(e1)) ∧ (e0.payload.k == e1.payload.k) -> (e0.payload.sequence_id <= e1.payload.sequence_id)
∀e0: eReadSuccess ∀e1: eReadSuccess :: (e0.payload.k == e1.payload.k) ∧ (e0.payload.sequence_id > e1.payload.sequence_id) -> (indexof(e0) > indexof(e1))
∀e0: eReadSuccess ∀e1: eReadSuccess :: (e0.payload.k == e1.payload.k) ∧ (e0.payload.sequence_id == e1.payload.sequence_id) -> (e0.payload.v == e1.payload.v)
∀e0: eReadSuccess ∀e1: eReadFail :: (e0.payload.k == e1.payload.k) -> (indexof(e0) > indexof(e1))
∀e0: eNotifyLog ∀e1: eNotifyLog :: (e0.payload.position <= e1.payload.position) ∧ (prefixOf(e0.payload, e1.payload) == No) -> (e0.payload.epoch > e1.payload.epoch) ∧ (((size(e0.payload.log)) - (1)) >= size(e1.payload.sent)) ∧ (((size(e0.payload.log)) - (1)) >= size(e1.payload.log)) ∧ (size(e0.payload.log) > size(e1.payload.log)) ∧ (size(e0.payload.log) > size(e1.payload.sent)) ∧ (((size(e0.payload.sent)) - (1)) >= ((size(e1.payload.sent)) - (1))) ∧ (size(e0.payload.sent) >= size(e1.payload.sent))
∀e0: eNotifyLog ∀e1: eNotifyLog :: (e0.payload.position <= e1.payload.position) ∧ (UnionEq(e0.payload, e1.payload) == No) -> (e0.payload.epoch > e1.payload.epoch) ∧ (((size(e0.payload.log)) - (1)) >= size(e1.payload.sent)) ∧ (((size(e0.payload.log)) - (1)) >= size(e1.payload.log)) ∧ (size(e0.payload.log) > size(e1.payload.log)) ∧ (size(e0.payload.log) > size(e1.payload.sent)) ∧ (((size(e0.payload.sent)) - (1)) >= ((size(e1.payload.sent)) - (1))) ∧ (size(e0.payload.sent) >= size(e1.payload.sent))
∀e0: eNotifyLog ∀e1: eNotifyLog :: (e0.payload.position <= e1.payload.position) ∧ (size(e0.payload.log) > size(e1.payload.log)) -> (prefixOf(e0.payload, e1.payload) == No) ∧ (e0.payload.epoch > e1.payload.epoch) ∧ (((size(e0.payload.log)) - (1)) >= size(e1.payload.sent)) ∧ (((size(e0.payload.log)) - (1)) >= size(e1.payload.log)) ∧ (size(e0.payload.log) > size(e1.payload.sent)) ∧ (((size(e0.payload.sent)) - (1)) >= ((size(e1.payload.sent)) - (1))) ∧ (size(e0.payload.sent) >= size(e1.payload.sent))
∀e0: eNotifyLog ∀e1: eNotifyLog :: (e0.payload.position <= e1.payload.position) ∧ (size(e0.payload.sent) > size(e1.payload.log)) -> (prefixOf(e0.payload, e1.payload) == No) ∧ (size(e0.payload.sent) > size(e1.payload.sent)) ∧ (((size(e0.payload.log)) - (1)) >= size(e1.payload.sent)) ∧ (((size(e0.payload.sent)) - (1)) >= size(e1.payload.log)) ∧ (((size(e0.payload.sent)) - (1)) >= size(e1.payload.sent)) ∧ (e0.payload.epoch > e1.payload.epoch) ∧ (((size(e0.payload.log)) - (1)) >= size(e1.payload.log)) ∧ (size(e0.payload.log) > size(e1.payload.log)) ∧ (size(e0.payload.log) > size(e1.payload.sent))
∀e0: eNotifyLog ∀e1: eNotifyLog :: (e0.payload.position <= e1.payload.position) ∧ (e0.payload.log == e1.payload.log) -> (prefixOf(e0.payload, e1.payload) == Yes) ∧ (size(e0.payload.log) >= size(e1.payload.sent)) ∧ (indexof(e0) == indexof(e1)) ∧ (e0.payload.epoch == e1.payload.epoch) ∧ (((size(e0.payload.log)) - (1)) >= ((size(e1.payload.sent)) - (1))) ∧ (((size(e0.payload.sent)) - (1)) <= ((size(e1.payload.log)) - (1))) ∧ (size(e0.payload.sent) <= size(e1.payload.log)) ∧ (size(e0.payload.log) == size(e1.payload.log)) ∧ (size(e0.payload.sent) == size(e1.payload.sent)) ∧ (UnionEq(e0.payload, e1.payload) == Yes)
∀e0: eNotifyLog ∀e1: eNotifyLog :: (e0.payload.position <= e1.payload.position) ∧ (e0.payload.sent == e1.payload.sent) -> (prefixOf(e0.payload, e1.payload) == Yes) ∧ (size(e0.payload.log) >= size(e1.payload.sent)) ∧ (indexof(e0) == indexof(e1)) ∧ (e0.payload.epoch == e1.payload.epoch) ∧ (((size(e0.payload.log)) - (1)) >= ((size(e1.payload.sent)) - (1))) ∧ (((size(e0.payload.sent)) - (1)) <= ((size(e1.payload.log)) - (1))) ∧ (size(e0.payload.sent) <= size(e1.payload.log)) ∧ (size(e0.payload.log) == size(e1.payload.log)) ∧ (size(e0.payload.sent) == size(e1.payload.sent)) ∧ (UnionEq(e0.payload, e1.payload) == Yes)
∀e0: eNotifyLog ∀e1: eNotifyLog :: (e0.payload.position <= e1.payload.position) ∧ (e0.payload.epoch > e1.payload.epoch) -> (prefixOf(e0.payload, e1.payload) == No) ∧ (((size(e0.payload.log)) - (1)) >= size(e1.payload.sent)) ∧ (((size(e0.payload.log)) - (1)) >= size(e1.payload.log)) ∧ (size(e0.payload.log) > size(e1.payload.log)) ∧ (size(e0.payload.log) > size(e1.payload.sent)) ∧ (((size(e0.payload.sent)) - (1)) >= ((size(e1.payload.sent)) - (1))) ∧ (size(e0.payload.sent) >= size(e1.payload.sent))
∀e0: eNotifyLog ∀e1: eNotifyLog :: (e0.payload.position <= e1.payload.position) ∧ (size(e0.payload.log) == size(e1.payload.log)) -> (prefixOf(e0.payload, e1.payload) == Yes) ∧ (size(e0.payload.log) >= size(e1.payload.sent)) ∧ (e0.payload.epoch == e1.payload.epoch) ∧ (((size(e0.payload.log)) - (1)) >= ((size(e1.payload.sent)) - (1))) ∧ (((size(e0.payload.sent)) - (1)) <= ((size(e1.payload.log)) - (1))) ∧ (size(e0.payload.sent) <= size(e1.payload.log)) ∧ (((size(e0.payload.sent)) - (1)) >= ((size(e1.payload.sent)) - (1))) ∧ (size(e0.payload.sent) >= size(e1.payload.sent)) ∧ (UnionEq(e0.payload, e1.payload) == Yes)
∀e0: eNotifyLog ∀e1: eNotifyLog :: (e0.payload.position <= e1.payload.position) ∧ (e0.payload.epoch == e1.payload.epoch) -> (prefixOf(e0.payload, e1.payload) == Yes) ∧ (size(e0.payload.log) >= size(e1.payload.sent)) ∧ (((size(e0.payload.log)) - (1)) >= ((size(e1.payload.sent)) - (1))) ∧ (((size(e0.payload.sent)) - (1)) <= ((size(e1.payload.log)) - (1))) ∧ (size(e0.payload.sent) <= size(e1.payload.log)) ∧ (((size(e0.payload.sent)) - (1)) >= ((size(e1.payload.sent)) - (1))) ∧ (size(e0.payload.log) == size(e1.payload.log)) ∧ (size(e0.payload.sent) >= size(e1.payload.sent)) ∧ (UnionEq(e0.payload, e1.payload) == Yes)
∀e0: eNotifyLog ∀e1: eNotifyLog :: (e0.payload.position <= e1.payload.position) ∧ (size(e0.payload.log) < size(e1.payload.sent)) -> (prefixOf(e0.payload, e1.payload) == Yes) ∧ (e0.payload.epoch < e1.payload.epoch) ∧ (size(e0.payload.log) <= ((size(e1.payload.log)) - (1))) ∧ (indexof(e0) < indexof(e1)) ∧ (size(e0.payload.log) <= ((size(e1.payload.sent)) - (1))) ∧ (size(e0.payload.log) < size(e1.payload.log)) ∧ (size(e0.payload.sent) <= ((size(e1.payload.sent)) - (1))) ∧ (size(e0.payload.sent) < size(e1.payload.log)) ∧ (size(e0.payload.sent) <= ((size(e1.payload.log)) - (1))) ∧ (size(e0.payload.sent) < size(e1.payload.sent)) ∧ (UnionEq(e0.payload, e1.payload) == Yes)
∀e0: eNotifyLog ∀e1: eNotifyLog :: (e0.payload.position <= e1.payload.position) ∧ (size(e0.payload.sent) < size(e1.payload.sent)) -> (prefixOf(e0.payload, e1.payload) == Yes) ∧ (e0.payload.epoch < e1.payload.epoch) ∧ (size(e0.payload.log) <= ((size(e1.payload.log)) - (1))) ∧ (size(e0.payload.log) < size(e1.payload.sent)) ∧ (indexof(e0) < indexof(e1)) ∧ (size(e0.payload.log) <= ((size(e1.payload.sent)) - (1))) ∧ (size(e0.payload.log) < size(e1.payload.log)) ∧ (size(e0.payload.sent) <= ((size(e1.payload.sent)) - (1))) ∧ (size(e0.payload.sent) < size(e1.payload.log)) ∧ (size(e0.payload.sent) <= ((size(e1.payload.log)) - (1))) ∧ (UnionEq(e0.payload, e1.payload) == Yes)
∀e0: eNotifyLog ∀e1: eNotifyLog :: (e0.payload.position <= e1.payload.position) ∧ (size(e0.payload.log) == size(e1.payload.sent)) -> (prefixOf(e0.payload, e1.payload) == Yes) ∧ (size(e0.payload.log) <= size(e1.payload.log)) ∧ (((size(e0.payload.sent)) - (1)) <= ((size(e1.payload.log)) - (1))) ∧ (size(e0.payload.sent) <= size(e1.payload.log)) ∧ (((size(e0.payload.log)) - (1)) <= ((size(e1.payload.log)) - (1))) ∧ (e0.payload.epoch <= e1.payload.epoch) ∧ (size(e0.payload.sent) == size(e1.payload.sent)) ∧ (UnionEq(e0.payload, e1.payload) == Yes)
∀e0: eNotifyLog ∀e1: eNotifyLog :: (e0.payload.position <= e1.payload.position) ∧ (size(e0.payload.log) < size(e1.payload.log)) -> (prefixOf(e0.payload, e1.payload) == Yes) ∧ (e0.payload.epoch < e1.payload.epoch) ∧ (size(e0.payload.log) <= ((size(e1.payload.log)) - (1))) ∧ (size(e0.payload.sent) < size(e1.payload.log)) ∧ (size(e0.payload.sent) <= ((size(e1.payload.log)) - (1))) ∧ (indexof(e0) < indexof(e1)) ∧ (UnionEq(e0.payload, e1.payload) == Yes)
∀e0: eNotifyLog ∀e1: eNotifyLog :: (e0.payload.position <= e1.payload.position) ∧ (e0.payload.epoch < e1.payload.epoch) -> (prefixOf(e0.payload, e1.payload) == Yes) ∧ (size(e0.payload.log) < size(e1.payload.log)) ∧ (size(e0.payload.log) <= ((size(e1.payload.log)) - (1))) ∧ (size(e0.payload.sent) < size(e1.payload.log)) ∧ (size(e0.payload.sent) <= ((size(e1.payload.log)) - (1))) ∧ (indexof(e0) < indexof(e1)) ∧ (UnionEq(e0.payload, e1.payload) == Yes)
