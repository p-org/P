∀e0: eRequestVoteReply ∀e1: eRequestVoteReply :: (e0.payload.sender == e1.payload.sender) ∧ (e0.payload.term < e1.payload.term) -> (indexof(e0) < indexof(e1))
∀e0: eEntryApplied ∀e1: eEntryApplied :: (e0.payload.logIndex == e1.payload.logIndex) -> (e0.payload.term == e1.payload.term) ∧ (e0.payload.value == e1.payload.value) ∧ (e0.payload.client == e1.payload.client) ∧ (e0.payload.key == e1.payload.key) ∧ (e0.payload.transId == e1.payload.transId)
∀e0: eEntryApplied ∀e1: eEntryApplied :: (e0.payload.client == e1.payload.client) ∧ (e0.payload.transId == e1.payload.transId) -> (e0.payload.value == e1.payload.value) ∧ (e0.payload.key == e1.payload.key)
∀e0: eBecomeLeader ∀e1: eRequestVoteReply :: (e0.payload.leader == e1.payload.sender) ∧ (e0.payload.term < e1.payload.term) -> (indexof(e0) < indexof(e1))
∀e0: eBecomeLeader ∀e1: eRequestVoteReply :: (e0.payload.leader == e1.payload.sender) ∧ (e0.payload.term > e1.payload.term) -> (indexof(e0) > indexof(e1))
∀e0: eBecomeLeader ∀e1: eBecomeLeader :: (e0.payload.log == e1.payload.log) -> (e0.payload.term == e1.payload.term) ∧ (indexof(e0) == indexof(e1)) ∧ (e0.payload.leader == e1.payload.leader) ∧ (e0.payload.commitIndex == e1.payload.commitIndex) ∧ (size(e0.payload.log) == size(e1.payload.log))
∀e0: eBecomeLeader ∀e1: eBecomeLeader :: (e0.payload.term == e1.payload.term) -> (indexof(e0) == indexof(e1)) ∧ (e0.payload.leader == e1.payload.leader) ∧ (e0.payload.commitIndex == e1.payload.commitIndex) ∧ (e0.payload.log == e1.payload.log) ∧ (size(e0.payload.log) == size(e1.payload.log))
∀e0: eBecomeLeader ∀e1: eBecomeLeader :: (indexof(e0) < indexof(e1)) ∧ (e0.payload.term > e1.payload.term) -> (size(e0.payload.log) == size(e1.payload.log)) ∧ (e0.payload.leader != e1.payload.leader)
∀e0: eBecomeLeader ∀e1: eBecomeLeader :: (indexof(e0) < indexof(e1)) ∧ (e0.payload.leader == e1.payload.leader) -> (e0.payload.term < e1.payload.term)
∀e0: eBecomeLeader ∀e1: eBecomeLeader :: (e0.payload.leader == e1.payload.leader) ∧ (e0.payload.term > e1.payload.term) -> (indexof(e0) > indexof(e1))
∀e0: eBecomeLeader ∀e1: eBecomeLeader :: (indexof(e0) < indexof(e1)) ∧ (size(e0.payload.log) > size(e1.payload.log)) -> (e0.payload.term < e1.payload.term) ∧ (((size(e0.payload.log)) - (1)) == size(e1.payload.log))
∀e0: eBecomeLeader ∀e1: eBecomeLeader :: (indexof(e0) > indexof(e1)) ∧ (size(e0.payload.log) > size(e1.payload.log)) -> (e0.payload.term > e1.payload.term)
∀e0: eBecomeLeader ∀e1: eBecomeLeader :: (size(e0.payload.log) < size(e1.payload.log)) ∧ (e0.payload.term > e1.payload.term) -> (indexof(e0) > indexof(e1)) ∧ (size(e0.payload.log) == ((size(e1.payload.log)) - (1)))
∀e0: eBecomeLeader ∀e1: eBecomeLeader :: (size(e0.payload.log) < size(e1.payload.log)) ∧ (e0.payload.term < e1.payload.term) -> (indexof(e0) < indexof(e1))
∀e0: eBecomeLeader ∀e1: eBecomeLeader :: (indexof(e0) < indexof(e1)) -> (e1.payload.term >= 2) ∧ (((size(e0.payload.log)) - (1)) <= size(e1.payload.log)) ∧ (e0.payload.term != e1.payload.term)
∀e0: eRequestVoteReply ∀e1: eRequestVoteReply :: (indexof(e0) < indexof(e1)) ∧ (e0.payload.sender == e1.payload.sender) -> (e1.payload.term >= 2) ∧ (e0.payload.term <= e1.payload.term)
∀e0: eRequestVoteReply ∀e1: eRequestVoteReply :: (indexof(e0) < indexof(e1)) ∧ (e0.payload.term > e1.payload.term) -> (e1.payload.term >= 2) ∧ (e0.payload.sender != e1.payload.sender)
∀e0: eEntryApplied ∀e1: eEntryApplied :: (e0.payload.logIndex < e1.payload.logIndex) -> (e1.payload.logIndex >= 1) ∧ (e0.payload.term <= e1.payload.term)
∀e0: eBecomeLeader ∀e1: eRequestVoteReply :: (indexof(e0) < indexof(e1)) ∧ (e0.payload.term > e1.payload.term) -> (e1.payload.term >= 2) ∧ (e0.payload.leader != e1.payload.sender)
∀e0: eBecomeLeader ∀e1: eRequestVoteReply :: (indexof(e0) < indexof(e1)) ∧ (e0.payload.leader == e1.payload.sender) -> (e1.payload.term >= 2) ∧ (e0.payload.term <= e1.payload.term)
∀e0: eBecomeLeader ∀e1: eRequestVoteReply :: (indexof(e0) > indexof(e1)) ∧ (e0.payload.leader == e1.payload.sender) -> (e0.payload.term >= 2) ∧ (e0.payload.term >= e1.payload.term)
∀e0: eBecomeLeader ∀e1: eRequestVoteReply :: (indexof(e0) > indexof(e1)) ∧ (e0.payload.term < e1.payload.term) -> (e0.payload.term >= 2) ∧ (e0.payload.leader != e1.payload.sender)
∀e0: eBecomeLeader ∀e1: eBecomeLeader :: (e0.payload.term < e1.payload.term) -> (e1.payload.term >= 2) ∧ (((size(e0.payload.log)) - (1)) <= size(e1.payload.log))
∀e0: eBecomeLeader ∀e1: eBecomeLeader :: (size(e0.payload.log) > size(e1.payload.log)) -> (e0.payload.term != e1.payload.term) ∧ (e0.payload.term >= 2) ∧ (size(e0.payload.log) >= 1) ∧ (((size(e0.payload.log)) - (1)) >= size(e1.payload.log))
∀e0: eBecomeLeader :: ∃e1: eRequestVoteReply :: e1.payload.voteGranted ∧ (e0.payload.term >= 1) ∧ (e0.payload.term == e1.payload.term) ∧ (e1.payload.term >= 1) ∧ (_num_e_exists_ >= quorumSize)
∀e0: eBecomeLeader :: ∃e1: eRequestVoteReply :: (indexof(e0) > indexof(e1)) ∧ e1.payload.voteGranted ∧ (e0.payload.term == e1.payload.term) ∧ (e1.payload.term >= 1) ∧ (e0.payload.term >= 1)
∀e0: eEntryApplied ∀e1: eEntryApplied :: (e0.payload.term < e1.payload.term) -> (e1.payload.logIndex >= 1) ∧ (e0.payload.logIndex < e1.payload.logIndex) ∧ (e1.payload.term >= 2)
∀e0: eBecomeLeader :: ∃e1: eRequestVoteReply :: e1.payload.voteGranted ∧ (_num_e_exists_ >= ((size(e0.payload.log)) - (1))) ∧ (_num_e_exists_ >= quorumSize) ∧ (e0.payload.term >= 1) ∧ (size(e0.payload.log) >= 0) ∧ (e0.payload.commitIndex >= (-(1)))
∀e0: eBecomeLeader :: ∃e1: eRequestVoteReply :: (indexof(e0) > indexof(e1)) ∧ (e0.payload.term == e1.payload.term) ∧ (e1.payload.term >= 1) ∧ (e0.payload.term >= 1) ∧ (size(e0.payload.log) >= 0) ∧ (e0.payload.commitIndex >= (-(1)))
∀e0: eBecomeLeader ∀e1: eBecomeLeader :: (size(e0.payload.log) == size(e1.payload.log)) ∧ (e0.payload.commitIndex < e1.payload.commitIndex) -> (e0.payload.term >= 2) ∧ (size(e0.payload.log) >= 1) ∧ (size(e0.payload.log) == size(e1.payload.log))
∀e0: eBecomeLeader ∀e1: eBecomeLeader :: (e0.payload.commitIndex < e1.payload.commitIndex) -> (e1.payload.term >= 2) ∧ (e1.payload.commitIndex >= 0) ∧ (size(e1.payload.log) >= 1) ∧ (e0.payload.term != e1.payload.term)
∀e0: eBecomeLeader :: ∃e1: eRequestVoteReply :: (indexof(e0) > indexof(e1)) ∧ e1.payload.voteGranted ∧ (e1.payload.term >= 1) ∧ (e0.payload.term >= 1) ∧ (size(e0.payload.log) >= 0) ∧ (e0.payload.commitIndex >= (-(1)))
∀e0: eBecomeLeader :: ∃e1: eRequestVoteReply :: e1.payload.voteGranted ∧ (e0.payload.term == e1.payload.term) ∧ (e1.payload.term >= 1) ∧ (e0.payload.term >= 1) ∧ (size(e0.payload.log) >= 0) ∧ (e0.payload.commitIndex >= (-(1)))
∀e0: eRequestVoteReply :: (e0.payload.term >= 1)
∀e0: eRequestVoteReply :: !(e0.payload.voteGranted) -> (e0.payload.term >= 2)
∀e0: eRequestVoteReply ∀e1: eRequestVoteReply :: (e0.payload.term < e1.payload.term) -> (e1.payload.term >= 2)
∀e0: eRequestVoteReply ∀e1: eRequestVoteReply :: (indexof(e0) < indexof(e1)) ∧ !(e0.payload.voteGranted) -> (e1.payload.term >= 2)
∀e0: eRequestVoteReply ∀e1: eRequestVoteReply :: (indexof(e0) > indexof(e1)) ∧ !(e1.payload.voteGranted) -> (e0.payload.term >= 2)
∀e0: eRequestVoteReply ∀e1: eRequestVoteReply :: !(e0.payload.voteGranted) ∧ (e0.payload.term == e1.payload.term) -> (e1.payload.term >= 2)
∀e0: eRequestVoteReply ∀e1: eRequestVoteReply :: !(e1.payload.voteGranted) ∧ (e0.payload.term == e1.payload.term) -> (e0.payload.term >= 2)
∀e0: eEntryApplied :: (e0.payload.key >= 0) ∧ (e0.payload.value >= 0) ∧ (e0.payload.logIndex >= 0) ∧ (e0.payload.term >= 1)
∀e0: eBecomeLeader ∀e1: eRequestVoteReply :: (e0.payload.term == e1.payload.term) -> (size(e0.payload.log) >= 0) ∧ (e0.payload.commitIndex >= (-(1)))
∀e0: eBecomeLeader ∀e1: eRequestVoteReply :: (e0.payload.leader == e1.payload.sender) -> (size(e0.payload.log) >= 0) ∧ (e0.payload.commitIndex >= (-(1)))
∀e0: eBecomeLeader ∀e1: eRequestVoteReply :: (indexof(e0) < indexof(e1)) -> (size(e0.payload.log) >= 0) ∧ (e0.payload.commitIndex >= (-(1)))
∀e0: eBecomeLeader ∀e1: eRequestVoteReply :: (indexof(e0) > indexof(e1)) -> (size(e0.payload.log) >= 0) ∧ (e0.payload.commitIndex >= (-(1)))
∀e0: eBecomeLeader ∀e1: eRequestVoteReply :: (e0.payload.term < e1.payload.term) -> (e1.payload.term >= 2) ∧ (size(e0.payload.log) >= 0) ∧ (e0.payload.commitIndex >= (-(1)))
∀e0: eBecomeLeader ∀e1: eRequestVoteReply :: (e0.payload.term > e1.payload.term) -> (size(e0.payload.log) >= 0) ∧ (e0.payload.term >= 2) ∧ (e0.payload.commitIndex >= (-(1)))
∀e0: eBecomeLeader ∀e1: eRequestVoteReply :: (indexof(e0) > indexof(e1)) ∧ !(e1.payload.voteGranted) -> (e0.payload.term >= 2)
∀e0: eBecomeLeader ∀e1: eRequestVoteReply :: (e0.payload.leader == e1.payload.sender) ∧ (e0.payload.term == e1.payload.term) -> (e1.payload.term >= 2) ∧ (e0.payload.term >= 2)
∀e0: eBecomeLeader ∀e1: eRequestVoteReply :: !(e1.payload.voteGranted) ∧ (e0.payload.term == e1.payload.term) -> (e0.payload.term >= 2)
∀e0: eBecomeLeader :: (e0.payload.term >= 1) ∧ (e0.payload.commitIndex >= (-(1))) ∧ (size(e0.payload.log) >= 0)
∀e0: eBecomeLeader ∀e1: eBecomeLeader :: (indexof(e0) < indexof(e1)) ∧ (e0.payload.commitIndex > e1.payload.commitIndex) -> (size(e1.payload.log) >= 1)
∀e0: eBecomeLeader ∀e1: eBecomeLeader :: (e0.payload.term < e1.payload.term) ∧ (e0.payload.commitIndex > e1.payload.commitIndex) -> (size(e1.payload.log) >= 1)
∀e0: eBecomeLeader ∀e1: eBecomeLeader :: (size(e0.payload.log) < size(e1.payload.log)) ∧ (e0.payload.commitIndex > e1.payload.commitIndex) -> (size(e1.payload.log) >= 2)
