∀e0: Allowed :: ∃e1: SendFromInternal :: (indexof(e0) > indexof(e1)) ∧ (e0.payload.node == e1.payload.dst)
∀e0: Sent :: ∃e1: SendFromInternal :: (indexof(e0) > indexof(e1))
∀e0: Sent :: e0.payload.toInternal -> ∃e1: SendFromInternal :: (e0.payload.dst == e1.payload.src) ∧ (e0.payload.src == e1.payload.dst)
∀e0: Sent :: e0.payload.toInternal -> ∃e1: SendFromInternal :: (indexof(e0) > indexof(e1)) ∧ (e0.payload.src == e1.payload.dst)
∀e0: Sent :: !(e0.payload.toInternal) -> ∃e1: SendFromInternal :: (e0.payload.src == e1.payload.src) ∧ (e0.payload.dst == e1.payload.dst) ∧ (indexof(e0) > indexof(e1))
∀e0: Sent ∀e1: Sent :: (e0.payload.src == e1.payload.dst) -> (e0.payload.src != e1.payload.src) ∧ (e0.payload.dst != e1.payload.dst)
∀e0: Sent ∀e1: Sent :: (e0.payload.dst == e1.payload.src) -> (e0.payload.src != e1.payload.src) ∧ (e0.payload.dst != e1.payload.dst)
∀e0: Sent ∀e1: Sent :: (e0.payload.src == e1.payload.src) -> (e0.payload.dst == e1.payload.dst) ∧ (indexof(e0) == indexof(e1)) ∧ (e0.payload.dst != e1.payload.src) ∧ (e0.payload.src != e1.payload.dst)
∀e0: Sent ∀e1: Sent :: (e0.payload.dst == e1.payload.dst) -> (e0.payload.dst != e1.payload.src) ∧ (e0.payload.src != e1.payload.dst)
∀e0: Sent :: !(e0.payload.toInternal) -> ∃e1: SendToInternal :: (e0.payload.dst == e1.payload.src)
∀e0: Sent :: e0.payload.toInternal -> ∃e1: SendToInternal :: (e0.payload.src == e1.payload.src) ∧ (e0.payload.dst == e1.payload.dst) ∧ (indexof(e0) > indexof(e1))
∀e0: SendFromInternal ∀e1: SendFromInternal :: (e0.payload.src == e1.payload.src) -> (e0.payload.dst == e1.payload.dst) ∧ (indexof(e0) == indexof(e1))
∀e0: SendToInternal ∀e1: SendToInternal :: (e0.payload.src == e1.payload.src) -> (e0.payload.dst == e1.payload.dst) ∧ (indexof(e0) == indexof(e1))
∀e0: Sent ∀e1: SendFromInternal :: (e0.payload.src == e1.payload.src) -> (e0.payload.toInternal == False) ∧ (e0.payload.dst == e1.payload.dst) ∧ (indexof(e0) > indexof(e1))
∀e0: Allowed :: ∃e1: Sent :: (indexof(e0) < indexof(e1)) ∧ !(e1.payload.toInternal) ∧ (e0.payload.node == e1.payload.dst)
∀e0: Sent ∀e1: SendToInternal :: (e0.payload.src == e1.payload.src) -> (e0.payload.toInternal == True) ∧ (e0.payload.dst == e1.payload.dst) ∧ (indexof(e0) > indexof(e1))
∀e0: Sent ∀e1: SendFromInternal :: (e0.payload.dst == e1.payload.src) -> (e0.payload.toInternal == True)
∀e0: Sent ∀e1: SendFromInternal :: (e0.payload.src == e1.payload.dst) -> (e0.payload.toInternal == True)
∀e0: Sent ∀e1: SendFromInternal :: (e0.payload.dst == e1.payload.dst) -> (e0.payload.toInternal == False)
∀e0: Sent ∀e1: Sent :: (e0.payload.src == e1.payload.src) ∧ e0.payload.toInternal -> (e1.payload.toInternal == True)
∀e0: Sent ∀e1: Sent :: (e0.payload.src == e1.payload.src) ∧ e1.payload.toInternal -> (e0.payload.toInternal == True)
∀e0: Sent ∀e1: Sent :: (e0.payload.src == e1.payload.src) ∧ !(e0.payload.toInternal) -> (e1.payload.toInternal == False)
∀e0: Sent ∀e1: Sent :: (e0.payload.src == e1.payload.src) ∧ !(e1.payload.toInternal) -> (e0.payload.toInternal == False)
∀e0: Sent ∀e1: Sent :: (e0.payload.src == e1.payload.dst) ∧ e0.payload.toInternal -> (e1.payload.toInternal == False)
∀e0: Sent ∀e1: Sent :: (e0.payload.src == e1.payload.dst) ∧ e1.payload.toInternal -> (e0.payload.toInternal == False)
∀e0: Sent ∀e1: Sent :: (e0.payload.src == e1.payload.dst) ∧ !(e0.payload.toInternal) -> (e1.payload.toInternal == True)
∀e0: Sent ∀e1: Sent :: (e0.payload.src == e1.payload.dst) ∧ !(e1.payload.toInternal) -> (e0.payload.toInternal == True)
∀e0: Sent ∀e1: Sent :: (e0.payload.dst == e1.payload.src) ∧ e0.payload.toInternal -> (e1.payload.toInternal == False)
∀e0: Sent ∀e1: Sent :: (e0.payload.dst == e1.payload.src) ∧ !(e0.payload.toInternal) -> (e1.payload.toInternal == True)
∀e0: Sent ∀e1: Sent :: (e0.payload.dst == e1.payload.src) ∧ e1.payload.toInternal -> (e0.payload.toInternal == False)
∀e0: Sent ∀e1: Sent :: (e0.payload.dst == e1.payload.src) ∧ !(e1.payload.toInternal) -> (e0.payload.toInternal == True)
∀e0: Sent ∀e1: Sent :: (e0.payload.dst == e1.payload.dst) ∧ e0.payload.toInternal -> (e1.payload.toInternal == True)
∀e0: Sent ∀e1: Sent :: (e0.payload.dst == e1.payload.dst) ∧ e1.payload.toInternal -> (e0.payload.toInternal == True)
∀e0: Sent ∀e1: Sent :: (e0.payload.dst == e1.payload.dst) ∧ !(e0.payload.toInternal) -> (e1.payload.toInternal == False)
∀e0: Sent ∀e1: Sent :: (e0.payload.dst == e1.payload.dst) ∧ !(e1.payload.toInternal) -> (e0.payload.toInternal == False)
∀e0: Allowed ∀e1: Sent :: (e0.payload.node == e1.payload.dst) -> (e1.payload.toInternal == False)
∀e0: Allowed ∀e1: Sent :: (e0.payload.node == e1.payload.src) -> (e1.payload.toInternal == True)
∀e0: Sent ∀e1: SendToInternal :: (e0.payload.src == e1.payload.dst) -> (e0.payload.toInternal == False)
∀e0: Sent ∀e1: SendToInternal :: (e0.payload.dst == e1.payload.dst) -> (e0.payload.toInternal == True)
∀e0: Sent ∀e1: SendToInternal :: (e0.payload.dst == e1.payload.src) -> (e0.payload.toInternal == False)
