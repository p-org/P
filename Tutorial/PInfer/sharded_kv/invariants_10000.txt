∀e0: eTransfer ∀e1: eReshard :: (e0.payload.src == e1.payload.dst) -> (e0.payload.dst != e1.payload.dst)
∀e0: eTransfer ∀e1: eReshard :: (e0.payload.dst == e1.payload.dst) -> (e0.payload.src != e1.payload.dst)
∀e0: eTransfer ∀e1: eReshard :: (e0.payload.key == e1.payload.key) -> (e0.payload.dst == e1.payload.dst) ∧ (indexof(e0) > indexof(e1)) ∧ (e0.payload.value == e1.payload.value) ∧ (e0.payload.src != e1.payload.dst)
∀e0: eTransfer ∀e1: eReshard :: (e0.payload.value == e1.payload.value) -> (e0.payload.dst == e1.payload.dst) ∧ (indexof(e0) > indexof(e1)) ∧ (e0.payload.key == e1.payload.key) ∧ (e0.payload.src != e1.payload.dst)
∀e0: eTransfer ∀e1: eTransfer :: (e0.payload.src == e1.payload.dst) -> (e0.payload.src != e1.payload.src) ∧ (e0.payload.dst != e1.payload.dst)
∀e0: eTransfer ∀e1: eTransfer :: (e0.payload.dst == e1.payload.src) -> (e0.payload.src != e1.payload.src) ∧ (e0.payload.dst != e1.payload.dst)
∀e0: eTransfer ∀e1: eTransfer :: (e0.payload.src == e1.payload.src) -> (e0.payload.dst != e1.payload.src) ∧ (e0.payload.src != e1.payload.dst)
∀e0: eTransfer ∀e1: eTransfer :: (e0.payload.key == e1.payload.key) -> (e0.payload.dst == e1.payload.dst) ∧ (indexof(e0) == indexof(e1)) ∧ (e0.payload.value == e1.payload.value) ∧ (e0.payload.dst != e1.payload.src) ∧ (e0.payload.src == e1.payload.src) ∧ (e0.payload.src != e1.payload.dst)
∀e0: eTransfer ∀e1: eTransfer :: (e0.payload.value == e1.payload.value) -> (e0.payload.dst == e1.payload.dst) ∧ (indexof(e0) == indexof(e1)) ∧ (e0.payload.key == e1.payload.key) ∧ (e0.payload.dst != e1.payload.src) ∧ (e0.payload.src == e1.payload.src) ∧ (e0.payload.src != e1.payload.dst)
∀e0: eTransfer ∀e1: eTransfer :: (e0.payload.dst == e1.payload.dst) -> (e0.payload.dst != e1.payload.src) ∧ (e0.payload.src != e1.payload.dst)
∀e0: eOwns ∀e1: eTransfer :: (e0.payload.value == e1.payload.value) -> (indexof(e0) > indexof(e1)) ∧ (e0.payload.key == e1.payload.key) ∧ (e0.payload.node != e1.payload.src) ∧ (e0.payload.node == e1.payload.dst)
∀e0: eOwns ∀e1: eTransfer :: (e0.payload.key == e1.payload.key) -> (indexof(e0) > indexof(e1)) ∧ (e0.payload.value == e1.payload.value) ∧ (e0.payload.node != e1.payload.src) ∧ (e0.payload.node == e1.payload.dst)
∀e0: eOwns ∀e1: eTransfer :: (e0.payload.node == e1.payload.src) -> (e0.payload.node != e1.payload.dst)
∀e0: eOwns ∀e1: eTransfer :: (e0.payload.node == e1.payload.dst) -> (e0.payload.node != e1.payload.src)
∀e0: eOwns ∀e1: eOwns :: (e0.payload.key == e1.payload.key) -> (e0.payload.value == e1.payload.value) ∧ (e0.payload.node == e1.payload.node)
∀e0: eOwns ∀e1: eOwns :: (e0.payload.value == e1.payload.value) -> (e0.payload.key == e1.payload.key) ∧ (e0.payload.node == e1.payload.node)
∀e0: eTransfer :: ∃e1: eReshard :: (indexof(e0) > indexof(e1)) ∧ (e0.payload.dst == e1.payload.dst) ∧ (e1.payload.key >= 0) ∧ (e0.payload.key >= 0) ∧ (e0.payload.value >= 0) ∧ (e0.payload.key == e1.payload.key) ∧ (e0.payload.value == e1.payload.value) ∧ (e1.payload.value >= 0)
∀e0: eReshard :: (e0.payload.key >= 0) ∧ (e0.payload.value >= 0)
∀e0: eTransfer :: (e0.payload.key >= 0) ∧ (e0.payload.value >= 0)
∀e0: eOwns :: (e0.payload.key >= 0) ∧ (e0.payload.value >= 0)
∀e0: eOwns :: ∃e1: eTransfer :: (e1.payload.key >= 0) ∧ (e0.payload.key >= 0) ∧ (e0.payload.value >= 0) ∧ (e1.payload.value >= 0)
